circuit Adder : @[:@2.0]
  module Adder : @[:@3.2]
    input clock : Clock @[:@4.4]
    input reset : UInt<1> @[:@5.4]
    input io_a : UInt<1> @[:@6.4]
    input io_b : UInt<1> @[:@6.4]
    input io_cin : UInt<1> @[:@6.4]
    output io_sum : UInt<1> @[:@6.4]
    output io_cout : UInt<1> @[:@6.4]
  
    node _T_15 = and(io_a, io_b) @[Adder.scala 11:20:@8.4]
    node _T_16 = and(io_cin, io_a) @[Adder.scala 11:38:@9.4]
    node _T_17 = or(_T_15, _T_16) @[Adder.scala 11:28:@10.4]
    node _T_18 = and(io_b, io_cin) @[Adder.scala 11:54:@11.4]
    node _T_19 = or(_T_17, _T_18) @[Adder.scala 11:46:@12.4]
    node _T_20 = not(io_cin) @[Adder.scala 12:14:@14.4]
    node _T_21 = not(io_a) @[Adder.scala 12:24:@15.4]
    node _T_22 = and(_T_20, _T_21) @[Adder.scala 12:22:@16.4]
    node _T_23 = and(_T_22, io_b) @[Adder.scala 12:30:@17.4]
    node _T_24 = not(io_cin) @[Adder.scala 12:41:@18.4]
    node _T_25 = and(_T_24, io_a) @[Adder.scala 12:49:@19.4]
    node _T_26 = not(io_b) @[Adder.scala 12:58:@20.4]
    node _T_27 = and(_T_25, _T_26) @[Adder.scala 12:56:@21.4]
    node _T_28 = or(_T_23, _T_27) @[Adder.scala 12:38:@22.4]
    node _T_29 = not(io_a) @[Adder.scala 12:77:@23.4]
    node _T_30 = and(io_cin, _T_29) @[Adder.scala 12:75:@24.4]
    node _T_31 = not(io_b) @[Adder.scala 12:85:@25.4]
    node _T_32 = and(_T_30, _T_31) @[Adder.scala 12:83:@26.4]
    node _T_33 = or(_T_28, _T_32) @[Adder.scala 12:65:@27.4]
    node _T_34 = and(io_cin, io_a) @[Adder.scala 12:102:@28.4]
    node _T_35 = and(_T_34, io_b) @[Adder.scala 12:109:@29.4]
    node _T_36 = or(_T_33, _T_35) @[Adder.scala 12:92:@30.4]
    io_sum <= _T_36 @[Adder.scala 12:10:@31.4]
    io_cout <= _T_19 @[Adder.scala 11:11:@13.4]
